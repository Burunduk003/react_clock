{"version":3,"sources":["components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","this","timer","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","className","React","Component","App","isClockVisible","clockName","newClockName","Math","floor","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"4NAIaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKH,MAAMI,MAAQC,aAAY,WAC7B,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAXP,gCAcE,SAAmBC,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DR,KAAKS,MAAMD,SAjBhF,kCAqBE,WACEE,cAAcV,KAAKH,MAAMI,SAtB7B,oBAyBE,WACE,IAAQH,EAASE,KAAKH,MAAdC,KAER,OACE,yBAAKa,UAAU,SACb,wBAAIA,UAAU,gBAAd,eAGA,uBAAGA,UAAU,eAAb,gBAEG,IACAb,EAAKQ,2BApChB,GAA2BM,IAAMC,YC8ClBC,G,kNA5CbjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACCD,EAAmBf,KAAKH,MAAxBkB,eACFE,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,UAErC,OACE,oCACGL,GAAkB,kBAAC,EAAD,CAAOP,KAAMR,KAAKH,MAAMmB,YAC3C,4BACEK,KAAK,SACLV,UAAU,cACVW,QAAS,WACP,EAAKnB,SAAS,CAAEY,gBAAgB,MAJpC,cASA,4BACEM,KAAK,SACLV,UAAU,cACVW,QAAS,WACP,EAAKnB,SAAS,CAAEY,gBAAgB,MAJpC,cASA,4BACEM,KAAK,SACLV,UAAU,cACVW,QAAS,WACP,EAAKnB,SAAS,CAAEa,UAAWC,MAJ/B,wB,GA/BUL,IAAMC,YCDxBU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e0a00347.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Clock.scss';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.state.timer = setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timer);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <h1 className=\"clock__title\">\n          React clock\n        </h1>\n        <p className=\"clock__time\">\n          Current time:\n          {' '}\n          {date.toLocaleTimeString()}\n        </p>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  render() {\n    const { isClockVisible } = this.state;\n    const newClockName = Math.floor(Math.random() * 101);\n\n    return (\n      <>\n        {isClockVisible && <Clock name={this.state.clockName} />}\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={() => {\n            this.setState({ clockName: newClockName });\n          }}\n        >\n          Set random name\n        </button>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}